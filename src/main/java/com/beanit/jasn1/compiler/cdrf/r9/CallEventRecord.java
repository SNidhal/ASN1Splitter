/**
 * This class file was automatically generated by jASN1 (http://www.beanit.com)
 */

package com.beanit.jasn1.compiler.cdrf.r9;

import com.beanit.jasn1.ber.BerTag;
import com.beanit.jasn1.ber.ReverseByteArrayOutputStream;
import com.beanit.jasn1.ber.types.BerType;

import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.Serializable;


public class CallEventRecord implements BerType, Serializable {

    private static final long serialVersionUID = 1L;

    public byte[] code = null;
    private SGSNPDPRecord sgsnPDPRecord = null;
    private GGSNPDPRecord ggsnPDPRecord = null;
    private SGSNMMRecord sgsnMMRecord = null;
    private SGSNSMORecord sgsnSMORecord = null;
    private SGSNSMTRecord sgsnSMTRecord = null;
    private SGSNLCTRecord sgsnLCTRecord = null;
    private SGSNLCORecord sgsnLCORecord = null;
    private SGSNLCNRecord sgsnLCNRecord = null;
    private EGSNPDPRecord egsnPDPRecord = null;
    private SGSNMBMSRecord sgsnMBMSRecord = null;
    private GGSNMBMSRecord ggsnMBMSRecord = null;
    private SGWRecord sGWRecord = null;
    private PGWRecord pGWRecord = null;

    public CallEventRecord() {
    }

    public CallEventRecord(byte[] code) {
        this.code = code;
    }

    public void setSgsnPDPRecord(SGSNPDPRecord sgsnPDPRecord) {
        this.sgsnPDPRecord = sgsnPDPRecord;
    }

    public SGSNPDPRecord getSgsnPDPRecord() {
        return sgsnPDPRecord;
    }

    public void setGgsnPDPRecord(GGSNPDPRecord ggsnPDPRecord) {
        this.ggsnPDPRecord = ggsnPDPRecord;
    }

    public GGSNPDPRecord getGgsnPDPRecord() {
        return ggsnPDPRecord;
    }

    public void setSgsnMMRecord(SGSNMMRecord sgsnMMRecord) {
        this.sgsnMMRecord = sgsnMMRecord;
    }

    public SGSNMMRecord getSgsnMMRecord() {
        return sgsnMMRecord;
    }

    public void setSgsnSMORecord(SGSNSMORecord sgsnSMORecord) {
        this.sgsnSMORecord = sgsnSMORecord;
    }

    public SGSNSMORecord getSgsnSMORecord() {
        return sgsnSMORecord;
    }

    public void setSgsnSMTRecord(SGSNSMTRecord sgsnSMTRecord) {
        this.sgsnSMTRecord = sgsnSMTRecord;
    }

    public SGSNSMTRecord getSgsnSMTRecord() {
        return sgsnSMTRecord;
    }

    public void setSgsnLCTRecord(SGSNLCTRecord sgsnLCTRecord) {
        this.sgsnLCTRecord = sgsnLCTRecord;
    }

    public SGSNLCTRecord getSgsnLCTRecord() {
        return sgsnLCTRecord;
    }

    public void setSgsnLCORecord(SGSNLCORecord sgsnLCORecord) {
        this.sgsnLCORecord = sgsnLCORecord;
    }

    public SGSNLCORecord getSgsnLCORecord() {
        return sgsnLCORecord;
    }

    public void setSgsnLCNRecord(SGSNLCNRecord sgsnLCNRecord) {
        this.sgsnLCNRecord = sgsnLCNRecord;
    }

    public SGSNLCNRecord getSgsnLCNRecord() {
        return sgsnLCNRecord;
    }

    public void setEgsnPDPRecord(EGSNPDPRecord egsnPDPRecord) {
        this.egsnPDPRecord = egsnPDPRecord;
    }

    public EGSNPDPRecord getEgsnPDPRecord() {
        return egsnPDPRecord;
    }

    public void setSgsnMBMSRecord(SGSNMBMSRecord sgsnMBMSRecord) {
        this.sgsnMBMSRecord = sgsnMBMSRecord;
    }

    public SGSNMBMSRecord getSgsnMBMSRecord() {
        return sgsnMBMSRecord;
    }

    public void setGgsnMBMSRecord(GGSNMBMSRecord ggsnMBMSRecord) {
        this.ggsnMBMSRecord = ggsnMBMSRecord;
    }

    public GGSNMBMSRecord getGgsnMBMSRecord() {
        return ggsnMBMSRecord;
    }

    public void setSGWRecord(SGWRecord sGWRecord) {
        this.sGWRecord = sGWRecord;
    }

    public SGWRecord getSGWRecord() {
        return sGWRecord;
    }

    public void setPGWRecord(PGWRecord pGWRecord) {
        this.pGWRecord = pGWRecord;
    }

    public PGWRecord getPGWRecord() {
        return pGWRecord;
    }

    public int encode(OutputStream reverseOS) throws IOException {

        if (code != null) {
            for (int i = code.length - 1; i >= 0; i--) {
                reverseOS.write(code[i]);
            }
            return code.length;
        }

        int codeLength = 0;
        if (pGWRecord != null) {
            codeLength += pGWRecord.encode(reverseOS, false);
            // write tag: CONTEXT_CLASS, CONSTRUCTED, 79
            reverseOS.write(0x4F);
            reverseOS.write(0xBF);
            codeLength += 2;
            return codeLength;
        }

        if (sGWRecord != null) {
            codeLength += sGWRecord.encode(reverseOS, false);
            // write tag: CONTEXT_CLASS, CONSTRUCTED, 78
            reverseOS.write(0x4E);
            reverseOS.write(0xBF);
            codeLength += 2;
            return codeLength;
        }

        if (ggsnMBMSRecord != null) {
            codeLength += ggsnMBMSRecord.encode(reverseOS, false);
            // write tag: CONTEXT_CLASS, CONSTRUCTED, 77
            reverseOS.write(0x4D);
            reverseOS.write(0xBF);
            codeLength += 2;
            return codeLength;
        }

        if (sgsnMBMSRecord != null) {
            codeLength += sgsnMBMSRecord.encode(reverseOS, false);
            // write tag: CONTEXT_CLASS, CONSTRUCTED, 76
            reverseOS.write(0x4C);
            reverseOS.write(0xBF);
            codeLength += 2;
            return codeLength;
        }

        if (egsnPDPRecord != null) {
            codeLength += egsnPDPRecord.encode(reverseOS, false);
            // write tag: CONTEXT_CLASS, CONSTRUCTED, 70
            reverseOS.write(0x46);
            reverseOS.write(0xBF);
            codeLength += 2;
            return codeLength;
        }

        if (sgsnLCNRecord != null) {
            codeLength += sgsnLCNRecord.encode(reverseOS, false);
            // write tag: CONTEXT_CLASS, CONSTRUCTED, 27
            reverseOS.write(0xBB);
            codeLength += 1;
            return codeLength;
        }

        if (sgsnLCORecord != null) {
            codeLength += sgsnLCORecord.encode(reverseOS, false);
            // write tag: CONTEXT_CLASS, CONSTRUCTED, 26
            reverseOS.write(0xBA);
            codeLength += 1;
            return codeLength;
        }

        if (sgsnLCTRecord != null) {
            codeLength += sgsnLCTRecord.encode(reverseOS, false);
            // write tag: CONTEXT_CLASS, CONSTRUCTED, 25
            reverseOS.write(0xB9);
            codeLength += 1;
            return codeLength;
        }

        if (sgsnSMTRecord != null) {
            codeLength += sgsnSMTRecord.encode(reverseOS, false);
            // write tag: CONTEXT_CLASS, CONSTRUCTED, 24
            reverseOS.write(0xB8);
            codeLength += 1;
            return codeLength;
        }

        if (sgsnSMORecord != null) {
            codeLength += sgsnSMORecord.encode(reverseOS, false);
            // write tag: CONTEXT_CLASS, CONSTRUCTED, 23
            reverseOS.write(0xB7);
            codeLength += 1;
            return codeLength;
        }

        if (sgsnMMRecord != null) {
            codeLength += sgsnMMRecord.encode(reverseOS, false);
            // write tag: CONTEXT_CLASS, CONSTRUCTED, 22
            reverseOS.write(0xB6);
            codeLength += 1;
            return codeLength;
        }

        if (ggsnPDPRecord != null) {
            codeLength += ggsnPDPRecord.encode(reverseOS, false);
            // write tag: CONTEXT_CLASS, CONSTRUCTED, 21
            reverseOS.write(0xB5);
            codeLength += 1;
            return codeLength;
        }

        if (sgsnPDPRecord != null) {
            codeLength += sgsnPDPRecord.encode(reverseOS, false);
            // write tag: CONTEXT_CLASS, CONSTRUCTED, 20
            reverseOS.write(0xB4);
            codeLength += 1;
            return codeLength;
        }

        throw new IOException("Error encoding CHOICE: No element of CHOICE was selected.");
    }

    public int decode(InputStream is) throws IOException {
        return decode(is, null);
    }

    public int decode(InputStream is, BerTag berTag) throws IOException {

        int codeLength = 0;
        BerTag passedTag = berTag;

        if (berTag == null) {
            berTag = new BerTag();
            codeLength += berTag.decode(is);
        }


        if (berTag.equals(BerTag.CONTEXT_CLASS, BerTag.CONSTRUCTED, 20)) {
            sgsnPDPRecord = new SGSNPDPRecord();
            codeLength += sgsnPDPRecord.decode(is, false);
            return codeLength;
        }

        if (berTag.equals(BerTag.CONTEXT_CLASS, BerTag.CONSTRUCTED, 21)) {
            ggsnPDPRecord = new GGSNPDPRecord();
            codeLength += ggsnPDPRecord.decode(is, false);
            return codeLength;
        }

        if (berTag.equals(BerTag.CONTEXT_CLASS, BerTag.CONSTRUCTED, 22)) {
            sgsnMMRecord = new SGSNMMRecord();
            codeLength += sgsnMMRecord.decode(is, false);
            return codeLength;
        }

        if (berTag.equals(BerTag.CONTEXT_CLASS, BerTag.CONSTRUCTED, 23)) {
            sgsnSMORecord = new SGSNSMORecord();
            codeLength += sgsnSMORecord.decode(is, false);
            return codeLength;
        }

        if (berTag.equals(BerTag.CONTEXT_CLASS, BerTag.CONSTRUCTED, 24)) {
            sgsnSMTRecord = new SGSNSMTRecord();
            codeLength += sgsnSMTRecord.decode(is, false);
            return codeLength;
        }

        if (berTag.equals(BerTag.CONTEXT_CLASS, BerTag.CONSTRUCTED, 25)) {
            sgsnLCTRecord = new SGSNLCTRecord();
            codeLength += sgsnLCTRecord.decode(is, false);
            return codeLength;
        }

        if (berTag.equals(BerTag.CONTEXT_CLASS, BerTag.CONSTRUCTED, 26)) {
            sgsnLCORecord = new SGSNLCORecord();
            codeLength += sgsnLCORecord.decode(is, false);
            return codeLength;
        }

        if (berTag.equals(BerTag.CONTEXT_CLASS, BerTag.CONSTRUCTED, 27)) {
            sgsnLCNRecord = new SGSNLCNRecord();
            codeLength += sgsnLCNRecord.decode(is, false);
            return codeLength;
        }

        if (berTag.equals(BerTag.CONTEXT_CLASS, BerTag.CONSTRUCTED, 70)) {
            egsnPDPRecord = new EGSNPDPRecord();
            codeLength += egsnPDPRecord.decode(is, false);
            return codeLength;
        }

        if (berTag.equals(BerTag.CONTEXT_CLASS, BerTag.CONSTRUCTED, 76)) {
            sgsnMBMSRecord = new SGSNMBMSRecord();
            codeLength += sgsnMBMSRecord.decode(is, false);
            return codeLength;
        }

        if (berTag.equals(BerTag.CONTEXT_CLASS, BerTag.CONSTRUCTED, 77)) {
            ggsnMBMSRecord = new GGSNMBMSRecord();
            codeLength += ggsnMBMSRecord.decode(is, false);
            return codeLength;
        }

        if (berTag.equals(BerTag.CONTEXT_CLASS, BerTag.CONSTRUCTED, 78)) {
            sGWRecord = new SGWRecord();
            codeLength += sGWRecord.decode(is, false);
            return codeLength;
        }

        if (berTag.equals(BerTag.CONTEXT_CLASS, BerTag.CONSTRUCTED, 79)) {
            pGWRecord = new PGWRecord();
            codeLength += pGWRecord.decode(is, false);
            return codeLength;
        }

        if (passedTag != null) {
            return 0;
        }

        throw new IOException("Error decoding CHOICE: Tag " + berTag + " matched to no item.");
    }

    public void encodeAndSave(int encodingSizeGuess) throws IOException {
        ReverseByteArrayOutputStream reverseOS = new ReverseByteArrayOutputStream(encodingSizeGuess);
        encode(reverseOS);
        code = reverseOS.getArray();
    }

    public String toString() {
        StringBuilder sb = new StringBuilder();
        appendAsString(sb, 0);
        return sb.toString();
    }

    public void appendAsString(StringBuilder sb, int indentLevel) {

        if (sgsnPDPRecord != null) {
            sb.append("sgsnPDPRecord: ");
            sgsnPDPRecord.appendAsString(sb, indentLevel + 1);
            return;
        }

        if (ggsnPDPRecord != null) {
            sb.append("ggsnPDPRecord: ");
            ggsnPDPRecord.appendAsString(sb, indentLevel + 1);
            return;
        }

        if (sgsnMMRecord != null) {
            sb.append("sgsnMMRecord: ");
            sgsnMMRecord.appendAsString(sb, indentLevel + 1);
            return;
        }

        if (sgsnSMORecord != null) {
            sb.append("sgsnSMORecord: ");
            sgsnSMORecord.appendAsString(sb, indentLevel + 1);
            return;
        }

        if (sgsnSMTRecord != null) {
            sb.append("sgsnSMTRecord: ");
            sgsnSMTRecord.appendAsString(sb, indentLevel + 1);
            return;
        }

        if (sgsnLCTRecord != null) {
            sb.append("sgsnLCTRecord: ");
            sgsnLCTRecord.appendAsString(sb, indentLevel + 1);
            return;
        }

        if (sgsnLCORecord != null) {
            sb.append("sgsnLCORecord: ");
            sgsnLCORecord.appendAsString(sb, indentLevel + 1);
            return;
        }

        if (sgsnLCNRecord != null) {
            sb.append("sgsnLCNRecord: ");
            sgsnLCNRecord.appendAsString(sb, indentLevel + 1);
            return;
        }

        if (egsnPDPRecord != null) {
            sb.append("egsnPDPRecord: ");
            egsnPDPRecord.appendAsString(sb, indentLevel + 1);
            return;
        }

        if (sgsnMBMSRecord != null) {
            sb.append("sgsnMBMSRecord: ");
            sgsnMBMSRecord.appendAsString(sb, indentLevel + 1);
            return;
        }

        if (ggsnMBMSRecord != null) {
            sb.append("ggsnMBMSRecord: ");
            ggsnMBMSRecord.appendAsString(sb, indentLevel + 1);
            return;
        }

        if (sGWRecord != null) {
            sb.append("sGWRecord: ");
            sGWRecord.appendAsString(sb, indentLevel + 1);
            return;
        }

        if (pGWRecord != null) {
            sb.append("pGWRecord: ");
            pGWRecord.appendAsString(sb, indentLevel + 1);
            return;
        }

        sb.append("<none>");
    }

}

